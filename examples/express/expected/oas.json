{
    "openapi": "3.0.0",
    "info": {
        "title": "hello",
        "description": "This documentation was generated by Itdoc",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": ""
        }
    ],
    "paths": {
        "/signup": {
            "post": {
                "summary": "User Signup API",
                "tags": ["Auth"],
                "description": "Registers a user by receiving a username and password.",
                "operationId": "postSignup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "username",
                                        "description": "Username"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "P@ssw0rd123!@#",
                                        "description": "Password"
                                    }
                                },
                                "required": ["username", "password"]
                            },
                            "example": {
                                "username": "username",
                                "password": "P@ssw0rd123!@#"
                            }
                        }
                    },
                    "required": true
                },
                "security": [{}],
                "responses": {
                    "201": {
                        "description": "Sign up successfully"
                    },
                    "400": {
                        "description": "Fail to sign up without a username.",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "username is required",
                                            "description": "Error message"
                                        }
                                    },
                                    "required": ["error"]
                                },
                                "examples": {
                                    "Fail to sign up without a username.": {
                                        "value": {
                                            "error": {
                                                "message": "Fail to sign up without a username.",
                                                "code": "ERROR_400"
                                            }
                                        }
                                    },
                                    "Fail to sign up if the password is shorter than eight characters.": {
                                        "value": {
                                            "error": {
                                                "message": "Fail to sign up if the password is shorter than eight characters.",
                                                "code": "ERROR_400"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/:userId": {
            "get": {
                "summary": "User lookup API",
                "tags": ["User"],
                "description": "Retrieves detailed information about a specific user.",
                "operationId": "getUsersByuserid",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Valid user ID",
                        "example": "penek"
                    }
                ],
                "security": [{}],
                "responses": {
                    "200": {
                        "description": "Return 200 when a valid user ID is provided.",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "userId": {
                                            "type": "string",
                                            "example": "penek",
                                            "description": "User ID"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "hun",
                                            "description": "User name"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "penekhun@gmail.com",
                                            "description": "User email"
                                        },
                                        "friends": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "zagabi"
                                            },
                                            "description": "User friends",
                                            "example": ["zagabi", "json"]
                                        }
                                    },
                                    "required": ["userId", "username", "email", "friends"]
                                },
                                "examples": {
                                    "Return 200 when a valid user ID is provided.": {
                                        "value": {
                                            "userId": "penek",
                                            "username": "hun",
                                            "email": "penekhun@gmail.com",
                                            "friends": ["zagabi", "json"]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Return 404 when the user ID does not exist."
                    }
                }
            },
            "put": {
                "summary": "User update API",
                "tags": ["User"],
                "description": "Updates a user's information entirely by user ID.",
                "operationId": "putUsersByuserid",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Valid user ID",
                        "example": "user123"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Hong Gil-dong",
                                        "description": "Name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "hong@example.com",
                                        "description": "Email"
                                    },
                                    "age": {
                                        "type": "integer",
                                        "example": 30,
                                        "description": "Age"
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "city": {
                                                "type": "string",
                                                "example": "Seoul",
                                                "description": "City"
                                            },
                                            "street": {
                                                "type": "string",
                                                "example": "123 Gangnam-daero",
                                                "description": "Street"
                                            },
                                            "zipcode": {
                                                "type": "string",
                                                "example": "06000",
                                                "description": "Postal code"
                                            }
                                        },
                                        "required": ["city", "street", "zipcode"]
                                    }
                                },
                                "required": ["name", "email", "age"]
                            },
                            "example": {
                                "name": "Hong Gil-dong",
                                "email": "hong@example.com",
                                "age": 30,
                                "address": {
                                    "city": "Seoul",
                                    "street": "123 Gangnam-daero",
                                    "zipcode": "06000"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [{}],
                "responses": {
                    "200": {
                        "description": "Update successfully with valid user information",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        }
                                    }
                                },
                                "examples": {
                                    "Update successfully with valid user information": {
                                        "value": {
                                            "success": true,
                                            "message": "User updated successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attempt to update a nonexistent user",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found",
                                            "description": "Error message"
                                        }
                                    },
                                    "required": ["message"]
                                },
                                "examples": {
                                    "Attempt to update a nonexistent user": {
                                        "value": {
                                            "error": {
                                                "message": "Attempt to update a nonexistent user",
                                                "code": "ERROR_404"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "User partial update API",
                "tags": ["User"],
                "description": "Updates a user's information partially by user ID.",
                "operationId": "patchUsersByuserid",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Valid user ID",
                        "example": "user123"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "newemail@example.com",
                                        "description": "New email"
                                    }
                                },
                                "required": ["email"]
                            },
                            "example": {
                                "email": "newemail@example.com"
                            }
                        }
                    },
                    "required": true
                },
                "security": [{}],
                "responses": {
                    "200": {
                        "description": "Update only the email successfully",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User partially updated"
                                        },
                                        "updatedFields": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "email"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Update only the email successfully": {
                                        "value": {
                                            "success": true,
                                            "message": "User partially updated",
                                            "updatedFields": ["email"]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/:userId/friends/:friendName": {
            "delete": {
                "summary": "Deletes a specific user's friend.",
                "tags": ["User"],
                "description": "Delete a specific friend for a user.",
                "operationId": "deleteUsersByuseridFriendsByfriendname",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Nonexistent user ID",
                        "example": "invalid-user-id"
                    },
                    {
                        "name": "friendName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "friendName parameter"
                    }
                ],
                "security": [{}],
                "responses": {
                    "204": {
                        "description": "Delete successfully when both the user ID and friend ID are valid."
                    },
                    "400": {
                        "description": "Return 400 when the user ID does not exist."
                    },
                    "404": {
                        "description": "Return 404 when the friend ID does not exist."
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "User list API",
                "tags": ["User"],
                "description": "Retrieve the user list.",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 1,
                            "description": "Page"
                        },
                        "required": true,
                        "description": "Page"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 3,
                            "description": "Page size"
                        },
                        "required": true,
                        "description": "Page size"
                    }
                ],
                "security": [{}],
                "responses": {
                    "200": {
                        "description": "Retrieve the user list.",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "size": {
                                            "type": "integer",
                                            "example": 3,
                                            "description": "Page size"
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 6,
                                            "description": "Total number of users"
                                        },
                                        "members": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "username": {
                                                        "type": "string",
                                                        "example": "penekhun",
                                                        "description": "User ID"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "seonghun",
                                                        "description": "User real name"
                                                    }
                                                },
                                                "required": ["username", "name"]
                                            },
                                            "description": "User list",
                                            "example": [
                                                {
                                                    "username": {
                                                        "description": "User ID",
                                                        "example": "penekhun",
                                                        "required": true
                                                    },
                                                    "name": {
                                                        "description": "User real name",
                                                        "example": "seonghun",
                                                        "required": true
                                                    }
                                                },
                                                {
                                                    "username": "zagabi",
                                                    "name": "hongchul"
                                                },
                                                {
                                                    "username": "json",
                                                    "name": "jaesong"
                                                }
                                            ]
                                        }
                                    },
                                    "required": ["size", "total", "members"]
                                },
                                "examples": {
                                    "Retrieve the user list.": {
                                        "value": {
                                            "page": 1,
                                            "size": 3,
                                            "total": 6,
                                            "members": [
                                                {
                                                    "username": {
                                                        "description": "User ID",
                                                        "example": "penekhun",
                                                        "required": true
                                                    },
                                                    "name": {
                                                        "description": "User real name",
                                                        "example": "seonghun",
                                                        "required": true
                                                    }
                                                },
                                                {
                                                    "username": "zagabi",
                                                    "name": "hongchul"
                                                },
                                                {
                                                    "username": "json",
                                                    "name": "jaesong"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Return 400 when the page number is missing.",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "page are required",
                                            "description": "Error message"
                                        }
                                    },
                                    "required": ["error"]
                                },
                                "examples": {
                                    "Return 400 when the page number is missing.": {
                                        "value": {
                                            "error": {
                                                "message": "Return 400 when the page number is missing.",
                                                "code": "ERROR_400"
                                            }
                                        }
                                    },
                                    "Return 400 when the page size is missing.": {
                                        "value": {
                                            "error": {
                                                "message": "Return 400 when the page size is missing.",
                                                "code": "ERROR_400"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/secret": {
            "get": {
                "summary": "Secret API",
                "tags": ["Secret"],
                "description": "Secret API that requires authentication.",
                "operationId": "getSecret",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Allow access when the auth token is present.",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This is a secret message",
                                            "description": "Secret message"
                                        }
                                    },
                                    "required": ["message"]
                                },
                                "examples": {
                                    "Allow access when the auth token is present.": {
                                        "value": {
                                            "message": "This is a secret message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Deny access when the auth token is missing."
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "summary": "Order creation API",
                "tags": ["Order"],
                "description": "Creates a new order.",
                "operationId": "postOrders",
                "parameters": [
                    {
                        "name": "x-request-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "req-12345"
                        },
                        "required": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "customer": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "example": "cust123",
                                                "description": "Customer ID"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Hong Gil-dong",
                                                "description": "Customer name"
                                            },
                                            "contact": {
                                                "type": "object",
                                                "properties": {
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "hong@example.com",
                                                        "description": "Email"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "010-1234-5678",
                                                        "description": "Phone number"
                                                    }
                                                },
                                                "required": ["email", "phone"]
                                            }
                                        },
                                        "required": ["id", "name"]
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "productId": {
                                                    "type": "string",
                                                    "example": "prod1"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Laptop"
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 1500000
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "8GB RAM"
                                                    }
                                                }
                                            }
                                        },
                                        "description": "Order item list",
                                        "example": [
                                            {
                                                "productId": "prod1",
                                                "name": "Laptop",
                                                "price": 1500000,
                                                "quantity": 1,
                                                "options": ["8GB RAM", "512GB SSD"]
                                            },
                                            {
                                                "productId": "prod2",
                                                "name": "Mouse",
                                                "price": 30000,
                                                "quantity": 2,
                                                "options": []
                                            }
                                        ]
                                    },
                                    "shipping": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "object",
                                                "properties": {
                                                    "zipcode": {
                                                        "type": "string",
                                                        "example": "06000",
                                                        "description": "Postal code"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "Seoul",
                                                        "description": "City"
                                                    },
                                                    "street": {
                                                        "type": "string",
                                                        "example": "123 Gangnam-daero",
                                                        "description": "Detailed address"
                                                    }
                                                },
                                                "required": ["zipcode", "city", "street"]
                                            },
                                            "method": {
                                                "type": "string",
                                                "example": "express",
                                                "description": "Delivery method"
                                            },
                                            "instructions": {
                                                "type": "string",
                                                "example": "Leave it with security when absent.",
                                                "description": "Delivery instructions"
                                            }
                                        },
                                        "required": ["method", "instructions"]
                                    },
                                    "payment": {
                                        "type": "object",
                                        "properties": {
                                            "method": {
                                                "type": "string",
                                                "example": "credit_card",
                                                "description": "Payment method"
                                            },
                                            "details": {
                                                "type": "object",
                                                "properties": {
                                                    "cardType": {
                                                        "type": "string",
                                                        "example": "visa",
                                                        "description": "Card type"
                                                    },
                                                    "lastFourDigits": {
                                                        "type": "string",
                                                        "example": "1234",
                                                        "description": "Last four digits"
                                                    }
                                                },
                                                "required": ["cardType", "lastFourDigits"]
                                            }
                                        },
                                        "required": ["method"]
                                    },
                                    "couponCodes": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "SUMMER10"
                                        },
                                        "description": "Coupon codes",
                                        "example": ["SUMMER10", "WELCOME"]
                                    }
                                },
                                "required": ["items", "couponCodes"]
                            },
                            "example": {
                                "customer": {
                                    "id": "cust123",
                                    "name": "Hong Gil-dong",
                                    "contact": {
                                        "email": "hong@example.com",
                                        "phone": "010-1234-5678"
                                    }
                                },
                                "items": [
                                    {
                                        "productId": "prod1",
                                        "name": "Laptop",
                                        "price": 1500000,
                                        "quantity": 1,
                                        "options": ["8GB RAM", "512GB SSD"]
                                    },
                                    {
                                        "productId": "prod2",
                                        "name": "Mouse",
                                        "price": 30000,
                                        "quantity": 2,
                                        "options": []
                                    }
                                ],
                                "shipping": {
                                    "address": {
                                        "zipcode": "06000",
                                        "city": "Seoul",
                                        "street": "123 Gangnam-daero"
                                    },
                                    "method": "express",
                                    "instructions": "Leave it with security when absent."
                                },
                                "payment": {
                                    "method": "credit_card",
                                    "details": {
                                        "cardType": "visa",
                                        "lastFourDigits": "1234"
                                    }
                                },
                                "couponCodes": ["SUMMER10", "WELCOME"]
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create a complex order successfully",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "orderId": {
                                            "type": "string",
                                            "example": "order123",
                                            "description": "Order ID"
                                        },
                                        "totalAmount": {
                                            "type": "integer",
                                            "example": 1560000,
                                            "description": "Total amount"
                                        },
                                        "estimatedDelivery": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-09-15",
                                            "description": "Estimated delivery date"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "PAYMENT_PENDING",
                                            "description": "Order status"
                                        }
                                    },
                                    "required": [
                                        "orderId",
                                        "totalAmount",
                                        "estimatedDelivery",
                                        "status"
                                    ]
                                },
                                "examples": {
                                    "Create a complex order successfully": {
                                        "value": {
                                            "orderId": "order123",
                                            "totalAmount": 1560000,
                                            "estimatedDelivery": "2023-09-15",
                                            "status": "PAYMENT_PENDING"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "summary": "Product search API",
                "tags": ["Product"],
                "description": "Search products with a variety of conditions.",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "electronics",
                            "description": "Category"
                        },
                        "required": true,
                        "description": "Category"
                    },
                    {
                        "name": "minPrice",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 50000,
                            "description": "Minimum price"
                        },
                        "required": true,
                        "description": "Minimum price"
                    },
                    {
                        "name": "maxPrice",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 2000000,
                            "description": "Maximum price"
                        },
                        "required": true,
                        "description": "Maximum price"
                    },
                    {
                        "name": "brands",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "example": "samsung"
                            },
                            "description": "Brand list",
                            "example": ["samsung", "lg", "apple"]
                        },
                        "required": true,
                        "description": "Brand list"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "price_asc",
                            "description": "Sort order"
                        },
                        "required": true,
                        "description": "Sort order"
                    },
                    {
                        "name": "inStock",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "example": true,
                            "description": "In-stock status"
                        },
                        "required": true,
                        "description": "In-stock status"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 1,
                            "description": "Page number"
                        },
                        "required": true,
                        "description": "Page number"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 20,
                            "description": "Page size"
                        },
                        "required": true,
                        "description": "Page size"
                    },
                    {
                        "name": "features",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "wireless,bluetooth",
                            "description": "Features"
                        },
                        "required": true,
                        "description": "Features"
                    }
                ],
                "security": [{}],
                "responses": {
                    "200": {
                        "description": "Search products with diverse filters",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "prod1"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Wireless Mouse"
                                                    },
                                                    "price": {
                                                        "type": "integer",
                                                        "example": 50000
                                                    },
                                                    "brand": {
                                                        "type": "string",
                                                        "example": "samsung"
                                                    }
                                                }
                                            },
                                            "description": "Product list",
                                            "example": [
                                                {
                                                    "id": "prod1",
                                                    "name": "Wireless Mouse",
                                                    "price": 50000,
                                                    "brand": "samsung"
                                                },
                                                {
                                                    "id": "prod2",
                                                    "name": "Bluetooth Keyboard",
                                                    "price": 120000,
                                                    "brand": "lg"
                                                }
                                            ]
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "pageSize": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "totalItems": {
                                                    "type": "integer",
                                                    "example": 42,
                                                    "description": "Total number of products"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": 3,
                                                    "description": "Total number of pages"
                                                }
                                            },
                                            "required": ["totalItems", "totalPages"]
                                        },
                                        "filters": {
                                            "type": "object",
                                            "properties": {
                                                "appliedFilters": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "category"
                                                    },
                                                    "description": "Applied filters",
                                                    "example": [
                                                        "category",
                                                        "minPrice",
                                                        "maxPrice",
                                                        "brands",
                                                        "features"
                                                    ]
                                                }
                                            },
                                            "required": ["appliedFilters"]
                                        }
                                    },
                                    "required": ["products"]
                                },
                                "examples": {
                                    "Search products with diverse filters": {
                                        "value": {
                                            "products": [
                                                {
                                                    "id": "prod1",
                                                    "name": "Wireless Mouse",
                                                    "price": 50000,
                                                    "brand": "samsung"
                                                },
                                                {
                                                    "id": "prod2",
                                                    "name": "Bluetooth Keyboard",
                                                    "price": 120000,
                                                    "brand": "lg"
                                                }
                                            ],
                                            "pagination": {
                                                "currentPage": 1,
                                                "pageSize": 20,
                                                "totalItems": 42,
                                                "totalPages": 3
                                            },
                                            "filters": {
                                                "appliedFilters": [
                                                    "category",
                                                    "minPrice",
                                                    "maxPrice",
                                                    "brands",
                                                    "features"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cached-data": {
            "get": {
                "summary": "Cached data API",
                "tags": ["System"],
                "description": "Retrieves data using HTTP caching mechanisms.",
                "operationId": "getCached-data",
                "parameters": [
                    {
                        "name": "if-none-match",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "\"abc123\""
                        },
                        "required": false
                    },
                    {
                        "name": "accept",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        },
                        "required": false
                    },
                    {
                        "name": "accept-language",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "example": "ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"
                        },
                        "required": false
                    }
                ],
                "security": [{}],
                "responses": {
                    "200": {
                        "description": "Retrieve fresh data",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string",
                                                    "example": "1.0"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "Cacheable data"
                                                }
                                            },
                                            "description": "Data",
                                            "example": {
                                                "version": "1.0",
                                                "content": "Cacheable data"
                                            }
                                        },
                                        "timestamp": {
                                            "type": "integer",
                                            "example": 1697873280000,
                                            "description": "Timestamp"
                                        }
                                    },
                                    "required": ["data", "timestamp"]
                                },
                                "examples": {
                                    "Retrieve fresh data": {
                                        "value": {
                                            "data": {
                                                "version": "1.0",
                                                "content": "Cacheable data"
                                            },
                                            "timestamp": 1697873280000
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Leverage the If-None-Match header for caching"
                    }
                }
            }
        },
        "/failed-test": {
            "get": {
                "summary": "Failure-inducing API",
                "tags": ["Test"],
                "description": "Deliberately returns a failing response.",
                "operationId": "getFailed-test",
                "security": [{}],
                "responses": {
                    "404": {
                        "description": "Intentionally return a 404 response",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This endpoint is designed to make tests fail",
                                            "description": "Failure message"
                                        }
                                    },
                                    "required": ["message"]
                                },
                                "examples": {
                                    "Intentionally return a 404 response": {
                                        "value": {
                                            "error": {
                                                "message": "Intentionally return a 404 response",
                                                "code": "ERROR_404"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [{}]
}
